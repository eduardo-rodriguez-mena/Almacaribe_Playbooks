---
- name: Tomar snapshots de VMs en nodos Proxmox
  hosts: vDC1-1
  gather_facts: false # No necesitamos recopilar hechos para esta tarea
  become: false      # No necesitamos sudo, ya que nos conectamos como root

  vars:
    # Definir el nombre del snapshot y la descripción dinámicamente
    current_datetime: "{{ now(fmt='%Y%m%d_%H%M%S') }}"
    snapshot_name: "Ansible_snapshot_Temp_Update"
    snapshot_description: "Snapshot creado por Ansible el {{ now(fmt='%Y-%m-%d %H:%M:%S') }}."

  tasks:

    - name: Obtener lista de VMs en el nodo actual
      ansible.builtin.command: qm list
      register: vm_list_output
      changed_when: false

    - name: Tomar snapshot de cada VM
      ansible.builtin.shell: |
        set -euo pipefail
        VMID="{{ item.split(' ')[7] }}"
        VM_STATUS="{{ item.split(' ')[21] }}" # Obtener el estado (columna 3)
        if [[ "$VMID" =~ ^[0-9]+$ ]]; then
          # Comprobar si el snapshot ya existe
          if  qm listsnapshot "$VMID" | grep -q "{{ snapshot_name }}"; then
            echo "El snapshot '{{ snapshot_name }}' ya existe para VM $VMID. Eliminando..."
            qm delsnapshot "$VMID" "{{ snapshot_name }}"
          fi
          echo "Creando snapshot '{{ snapshot_name }}' para VM $VMID..."
          qm snapshot "$VMID" "{{ snapshot_name }}" --description "{{ snapshot_description }} - VM $VMID" --vmstate true
          echo "Snapshot exitoso para VM $VMID."
        else
          echo "Saltando línea no válida en la lista de VMs: {{ item }}"
        fi
      loop: "{{ vm_list_output.stdout_lines[1:] }}"
      loop_control:
        loop_var: item
      args:
        chdir: /root
        executable: /bin/bash
      register: vm_snapshot_result
      changed_when: "'Creando snapshot' in vm_snapshot_result.stdout"
      failed_when: "'ERROR' in vm_snapshot_result.stderr or 'Error:' in vm_snapshot_result.stderr"
      when: vm_list_output is defined and vm_list_output | length > 0

    - name: Mostrar resultados de los snapshots de VMs
      ansible.builtin.debug:
        msg: "{{ item.stdout }}" # Para ver la salida de cada snapshot
      loop: "{{ vm_snapshot_result.results }}"
      when: vm_list_output.stdout_lines | length > 1

    # - name: Send Email
    #   community.general.mail:
    #     host: mail.almacaribe.online
    #     username: notification@almacaribe.online
    #     password: b01uqIw14nL4wu5
    #     port: 587
    #     secure: starttls
    #     from: notification@almacaribe.online
    #     to: it@almacaribe.online
    #     subject: "Snapshots de CTs creados"
    #     body: |
    #       Los snapshots de las VMs y CTs han sido creados correctamente.
    #       Detalles:
    #       {% for item in ct_snapshot_result.results %}
    #       - CTID: {{ item.item }} - Resultado: {{ item.stdout }}
    #       {% endfor %}
    #   when: ct_snapshot_result is defined and ct_snapshot_result.results | length > 0
